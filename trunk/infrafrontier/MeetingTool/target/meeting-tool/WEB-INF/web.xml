<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.4"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee   http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<session-config>
		<session-timeout>120</session-timeout>
	</session-config>
		
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/app-config.xml</param-value>
	</context-param>
	
		<!-- you need a unique webroot key -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webapp.infrafrontier.MeetingTool</param-value>
	</context-param>
	
	<context-param>
		<param-name>javax.faces.CONFIG_FILES</param-name>
		<param-value>/WEB-INF/faces-config.xml</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.xml</param-value>
	</context-param>

	<!-- Just here so the JSF implementation can initialize, *not* used at runtime -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- Just here so the JSF implementation can initialize -->
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>

	 <context-param>
    	<param-name>javax.faces.PROJECT_STAGE</param-name>
    	<param-value>Development</param-value>
  	</context-param>
  
	 <context-param>
        <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
        <param-value>.xhtml</param-value>
    </context-param>
    
	<filter>
		<filter-name>serializeRequestsFilter</filter-name>
		<filter-class>
			de.ieg.infra.filter.SerializeRequestFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>serializeRequestsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<filter>
		<filter-name>springFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.RequestContextFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Loads /WEB-INF/applicationContext.xml and puts reference to it in servlet context. 
	Can be accessed with WebApplicationContextUtils.getRequiredWebApplicationContext  -->
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
<!-- Lets you give request or session scopes to beans in applicationContext.xml. 
If you donâ€™t use these scopes, this listener is not required. But you should probably have this entry commented
out in web.xml just in case you want those scopes later -->	
  <listener>
    <listener-class>
      org.springframework.web.context.request.RequestContextListener
    </listener-class>
  </listener>
  	
	<listener>
		<listener-class>uk.ac.ebi.phenotype.util.ContextFinalizer</listener-class>
	</listener>

	<!-- Log4j -->
	<!--  >listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener-->
	

	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>
	
	<error-page>
		<error-code>500</error-code>
		<location>/jsp/error.jsp</location>
	</error-page>
	

</web-app>

